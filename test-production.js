const https = require('https');

const BOT_TOKEN = '8367003356:AAGL4Nr4xAMP5GVPoxTUvyZ6cx9n8JU096c';

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ production –±–æ—Ç–∞...');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
function makeRequest(url) {
  return new Promise((resolve, reject) => {
    https.get(url, (res) => {
      let data = '';
      res.on('data', (chunk) => {
        data += chunk;
      });
      res.on('end', () => {
        try {
          const result = JSON.parse(data);
          resolve(result);
        } catch (e) {
          resolve({ raw: data });
        }
      });
    }).on('error', (err) => {
      reject(err);
    });
  });
}

async function testBot() {
  try {
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞...');
    const botInfo = await makeRequest(`https://api.telegram.org/bot${BOT_TOKEN}/getMe`);
    console.log('‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω:', botInfo);

    console.log('\nüîó –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ–±—Ö—É–∫...');
    const webhookInfo = await makeRequest(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
    console.log('‚úÖ –í–µ–±—Ö—É–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω:', webhookInfo);

    console.log('\nüåê –ü—Ä–æ–≤–µ—Ä—è–µ–º Mini App...');
    const miniAppResponse = await makeRequest('https://fitness-bot-miniapp-ged8.vercel.app/');
    if (miniAppResponse.raw && miniAppResponse.raw.includes('FITNESS BOT')) {
      console.log('‚úÖ Mini App –¥–æ—Å—Ç—É–ø–µ–Ω');
    } else {
      console.log('‚ö†Ô∏è Mini App –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üì± –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ Telegram: @testbotfitness2_bot');
    console.log('   –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—ã: /start –∏–ª–∏ /menu');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

testBot();
