const https = require('https');

const BOT_TOKEN = '8367003356:AAGL4Nr4xAMP5GVPoxTUvyZ6cx9n8JU096c';
const WEBHOOK_URL = 'https://fitness-bot-miniapp-ged8.vercel.app/api/telegram';
const SECRET_TOKEN = 'fitness-bot-secret-2024';

console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ –¥–ª—è –±–æ—Ç–∞...');
console.log('ü§ñ BOT_TOKEN:', BOT_TOKEN);
console.log('üåê WEBHOOK_URL:', WEBHOOK_URL);
console.log('üîê SECRET_TOKEN:', SECRET_TOKEN);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
function makeRequest(url) {
  return new Promise((resolve, reject) => {
    https.get(url, (res) => {
      let data = '';
      res.on('data', (chunk) => {
        data += chunk;
      });
      res.on('end', () => {
        try {
          const result = JSON.parse(data);
          resolve(result);
        } catch (e) {
          resolve({ raw: data });
        }
      });
    }).on('error', (err) => {
      reject(err);
    });
  });
}

async function setupWebhook() {
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –≤–µ–±—Ö—É–∫–∞
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –≤–µ–±—Ö—É–∫–∞...');
    const webhookInfo = await makeRequest(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
    console.log('–¢–µ–∫—É—â–∏–π –≤–µ–±—Ö—É–∫:', webhookInfo);

    // 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –≤–µ–±—Ö—É–∫
    console.log('\nüîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫...');
    const setWebhookUrl = `https://api.telegram.org/bot${BOT_TOKEN}/setWebhook?url=${encodeURIComponent(WEBHOOK_URL)}&secret_token=${SECRET_TOKEN}`;
    const setResult = await makeRequest(setWebhookUrl);
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞:', setResult);

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤–µ–±—Ö—É–∫–∞...');
    const newWebhookInfo = await makeRequest(`https://api.telegram.org/bot${BOT_TOKEN}/getWebhookInfo`);
    console.log('–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –≤–µ–±—Ö—É–∫–∞:', newWebhookInfo);

    if (newWebhookInfo.ok && newWebhookInfo.result.url === WEBHOOK_URL) {
      console.log('\nüéâ –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
      console.log('ü§ñ –ë–æ—Ç —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Vercel –∏ –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å 24/7');
      console.log('üì± –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram: @testbotfitness2_bot');
    } else {
      console.log('\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞');
      console.log('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('1. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ Vercel');
      console.log('2. –°–µ—Ä–≤–µ—Ä–ª–µ—Å—Å —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É–ª–∏—Å—å');
      console.log('3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –≤–µ–±—Ö—É–∫–∞');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
setupWebhook();
