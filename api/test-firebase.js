const { db } = require('../lib/firebase');

module.exports = async function handler(req, res) {
  try {
    console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const projectId = process.env.FIREBASE_PROJECT_ID;
    const clientEmail = process.env.FIREBASE_CLIENT_EMAIL;
    const privateKey = process.env.FIREBASE_PRIVATE_KEY;
    
    console.log('üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
    console.log('FIREBASE_PROJECT_ID:', projectId ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    console.log('FIREBASE_CLIENT_EMAIL:', clientEmail ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    console.log('FIREBASE_PRIVATE_KEY:', privateKey ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    
    if (!projectId || !clientEmail || !privateKey) {
      return res.status(200).json({
        ok: false,
        error: 'Missing Firebase environment variables',
        missing: {
          projectId: !projectId,
          clientEmail: !clientEmail,
          privateKey: !privateKey
        }
      });
    }
    
    // –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Firebase
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firebase...');
    const testRef = db.ref('/test');
    await testRef.set({
      timestamp: Date.now(),
      message: 'Firebase connection test'
    });
    
    console.log('‚úÖ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
    
    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    await testRef.remove();
    
    res.status(200).json({
      ok: true,
      message: 'Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!',
      projectId: projectId,
      clientEmail: clientEmail
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ Firebase:', error);
    res.status(200).json({
      ok: false,
      error: error.message,
      stack: error.stack
    });
  }
};
