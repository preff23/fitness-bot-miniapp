/* Telegram Mini App - Fitness Bot - DARING SPORTS STYLE */
import { ADMIN_USERNAME, BRAND, dm } from './config.js';

(function () {
  const tg = window.Telegram && window.Telegram.WebApp ? window.Telegram.WebApp : null;
  
  // Bottom Sheet elements
  const bottomSheetOverlay = document.getElementById('bottomSheetOverlay');
  const bottomSheet = document.getElementById('bottomSheet');
  const bottomSheetTitle = document.getElementById('bottomSheetTitle');
  const bottomSheetDescription = document.getElementById('bottomSheetDescription');
  const bottomSheetContent = document.getElementById('bottomSheetContent');

  // Submenu data
  const submenuData = {
    gym: {
      title: '–¢–†–ï–ù–ò–†–û–í–ö–ê –í –ó–ê–õ–ï',
      description: '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ —Å–ø–æ—Ä—Ç–∑–∞–ª–µ',
      items: [
        { text: '8 –¢–†–ï–ù–ò–†–û–í–û–ö', message: '–ó–∞–ª: 8 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫' },
        { text: '12 –¢–†–ï–ù–ò–†–û–í–û–ö', message: '–ó–∞–ª: 12 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫' },
        { text: '–ö–û–ú–ë–û (12 + –ü–ü + –°–û–ü–†–û–í–û–ñ–î–ï–ù–ò–ï)', message: '–ó–∞–ª: –ö–æ–º–±–æ' },
        { text: '–ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ô –ü–õ–ê–ù –ü–ò–¢–ê–ù–ò–Ø', message: '–ó–∞–ª: –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è' }
      ]
    },
    outdoor: {
      title: '–¢–†–ï–ù–ò–†–û–í–ö–ê –£–õ–ò–¶–ê',
      description: '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ —É–ª–∏—Ü–µ',
      items: [
        { text: '8 –¢–†–ï–ù–ò–†–û–í–û–ö', message: '–£–ª–∏—Ü–∞: 8 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫' },
        { text: '12 –¢–†–ï–ù–ò–†–û–í–û–ö', message: '–£–ª–∏—Ü–∞: 12 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫' },
        { text: '–ö–û–ú–ë–û (12 + –ü–ü + –°–û–ü–†–û–í–û–ñ–î–ï–ù–ò–ï)', message: '–£–ª–∏—Ü–∞: –ö–æ–º–±–æ' },
        { text: '–ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ô –ü–õ–ê–ù –ü–ò–¢–ê–ù–ò–Ø', message: '–£–ª–∏—Ü–∞: –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è' }
      ]
    },
    home: {
      title: '–¢–†–ï–ù–ò–†–û–í–ö–ò –î–û–ú–ê',
      description: '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –¥–æ–º–∞—à–Ω–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
      items: [
        { text: '8 –¢–†–ï–ù–ò–†–û–í–û–ö', message: '–î–æ–º: 8 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫' },
        { text: '–ö–û–ú–ë–û (12 + –ü–ü + –°–û–ü–†–û–í–û–ñ–î–ï–ù–ò–ï)', message: '–î–æ–º: –ö–æ–º–±–æ' }
      ]
    },
    combo: {
      title: '–°–ú–ï–®–ê–ù–ù–´–ï –¢–†–ï–ù–ò–†–û–í–ö–ò',
      description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–∏–¥–∞–º–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
      items: [
        { text: '–ú–ï–ì–ê –ö–û–ú–ë–û (16 –¢–†–ï–ù–ò–†–û–í–û–ö: –ó–ê–õ + –£–õ–ò–¶–ê + –î–û–ú + –ü–ü + –°–û–ü–†–û–í–û–ñ–î–ï–ù–ò–ï)', message: '–°–º–µ—à–∞–Ω–Ω—ã–µ: –ú–µ–≥–∞ –∫–æ–º–±–æ 16 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –∑–∞–ª+—É–ª–∏—Ü–∞+–¥–æ–º+–ü–ü+—Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ' }
      ]
    }
  };

  function initTelegram() {
    if (!tg) return;
    tg.ready();
    tg.expand();
    tg.setHeaderColor("#0D0D0D");
    tg.setBackgroundColor("#0D0D0D");
    
    // Handle back button
    tg.onEvent("backButtonClicked", closeBottomSheet);
    
    tg.onEvent("themeChanged", () => {
      // Could adapt CSS variables if needed
    });
  }

  function hapticImpact(style) {
    try {
      if (tg && tg.HapticFeedback) {
        tg.HapticFeedback.impactOccurred(style || "light");
      }
    } catch (_) {}
  }

  function showBottomSheet(submenuKey) {
    const data = submenuData[submenuKey];
    if (!data) return;

    hapticImpact('medium');
    
    // Update content
    bottomSheetTitle.textContent = data.title;
    bottomSheetDescription.textContent = data.description;
    
    // Clear and populate items
    bottomSheetContent.innerHTML = '';
    data.items.forEach(item => {
      const button = document.createElement('button');
      button.className = 'submenu-item';
      button.innerHTML = `
        <span class="icon energy" aria-hidden="true"></span>
        <span>${item.text}</span>
      `;
      
      button.addEventListener('click', () => {
        hapticImpact('light');
        dm(item.message);
        closeBottomSheet();
      });
      
      bottomSheetContent.appendChild(button);
    });

    // Show bottom sheet
    bottomSheetOverlay.classList.add('active');
    bottomSheet.classList.add('active');
    
    // Show back button in Telegram
    if (tg && tg.BackButton) {
      tg.BackButton.show();
    }
  }

  function closeBottomSheet() {
    bottomSheetOverlay.classList.remove('active');
    bottomSheet.classList.remove('active');
    
    // Hide back button in Telegram
    if (tg && tg.BackButton) {
      tg.BackButton.hide();
    }
  }

  async function showNews() {
    try {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
      const mainContent = document.querySelector('.main-content');
      mainContent.innerHTML = `
        <div class="news-loading">
          <div class="loading-spinner"></div>
          <p>–ó–ê–ì–†–£–ñ–ê–ï–ú –ù–û–í–û–°–¢–ò...</p>
        </div>
      `;
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ —Å –∫—ç—à-–±–∞—Å—Ç–µ—Ä–æ–º (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)
      const response = await fetch('/api/posts?limit=20&t=' + Date.now());
      const data = await response.json();
      
      if (data.ok && data.items.length > 0) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏
        mainContent.innerHTML = `
          <div class="news-container">
            <div class="news-header">
              <div class="left">
                <button class="back-button" onclick="location.reload()">
                  <span class="icon energy" aria-hidden="true"></span>
                  –ù–ê–ó–ê–î
                </button>
                <h2>–ù–û–í–û–°–¢–ò</h2>
              </div>
              <button class="refresh-button" onclick="showNews()">üîÑ</button>
            </div>
            <div class="news-list">
              ${data.items.map(post => `
                <article class="news-card">
                  <div class="news-date">${new Date(post.date * 1000).toLocaleString('ru-RU')}</div>
                  ${post.text ? `<div class="news-text">${post.text}</div>` : ''}
                  <a class="news-open" href="${post.post_url || `https://t.me/Konovalsportlive/${post.id}`}" target="_blank">
                    –û–¢–ö–†–´–¢–¨ –í –ö–ê–ù–ê–õ–ï ‚Üí
                  </a>
                </article>
              `).join('')}
            </div>
          </div>
        `;
      } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏–ª–∏ –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        mainContent.innerHTML = `
          <div class="news-container">
            <div class="news-header">
              <div class="left">
                <button class="back-button" onclick="location.reload()">
                  <span class="icon energy" aria-hidden="true"></span>
                  –ù–ê–ó–ê–î
                </button>
                <h2>–ù–û–í–û–°–¢–ò</h2>
              </div>
              <button class="refresh-button" onclick="showNews()">üîÑ</button>
            </div>
            <div class="news-empty">
              <p>–ü–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π</p>
            </div>
          </div>
        `;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π:', error);
      const mainContent = document.querySelector('.main-content');
      mainContent.innerHTML = `
        <div class="news-container">
          <div class="news-header">
            <div class="left">
              <button class="back-button" onclick="location.reload()">
                <span class="icon energy" aria-hidden="true"></span>
                –ù–ê–ó–ê–î
              </button>
              <h2>–ù–û–í–û–°–¢–ò</h2>
            </div>
            <button class="refresh-button" onclick="showNews()">üîÑ</button>
          </div>
          <div class="news-error">
            <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π</p>
          </div>
        </div>
      `;
    }
  }

  function routeAction(action) {
    switch (action) {
      case "free_consult":
        hapticImpact('medium');
        dm('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≤–≤–æ–¥–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É + –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.');
        break;
      case "marathon_signup":
        hapticImpact('medium');
        dm('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω.');
        break;
      case "nutrition_plan":
        hapticImpact('medium');
        dm('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ù—É–∂–µ–Ω –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è.');
        break;
      case "ask_question":
        hapticImpact('medium');
        dm('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –£ –º–µ–Ω—è –≤–æ–ø—Ä–æ—Å: ‚Ä¶');
        break;
      case "news":
        hapticImpact('medium');
        showNews();
        break;
    }
  }

  function wireMenu() {
    document.querySelectorAll('.menu-card').forEach((btn) => {
      btn.addEventListener('click', () => {
        const action = btn.getAttribute('data-action');
        const submenu = btn.getAttribute('data-submenu');
        
        hapticImpact('light');
        
        if (submenu) {
          showBottomSheet(submenu);
        } else {
          routeAction(action);
        }
      });
    });
  }

  function wireBottomSheet() {
    // Close on overlay click
    bottomSheetOverlay.addEventListener('click', closeBottomSheet);
    
    // Prevent closing when clicking on bottom sheet content
    bottomSheet.addEventListener('click', (e) => {
      e.stopPropagation();
    });
  }

  function main() {
    initTelegram();
    wireMenu();
    wireBottomSheet();
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', main);
  } else {
    main();
  }
})();